const{createServer}=require("http");function checkMethod(a){if(!["GET","POST","PUT","DELETE","PATCH"].includes(a))throw new Error("invalid method")}function checkPath(a){if("string"==typeof a){if(!a.startsWith("/"))throw new Error("path must start with /");return}if(a instanceof RegExp){if(!a.source.startsWith("^\\/")||!a.source.endsWith("$"))throw new Error("path must start with ^/ and ends with $");return}throw new Error("path must be string or RegExp")}class RegexRouter{constructor(){this.routes=new Map,this.middlewares=[],this.notFoundHandler=(a,b)=>{b.statusCode=404,b.end(JSON.stringify({error:"Not found"}))},this.internalErrorHandler=(a,b)=>{b.statusCode=500,b.end(JSON.stringify({error:e.message}))}}use(a){this.middlewares.push(a),this.notFoundHandler=a(this.notFoundHandler),this.internalErrorHandler=a(this.internalErrorHandler)}register(a,b,c,...d){return checkMethod(a),checkPath(b),c=d.reduce((a,b)=>b(a),c),c=this.middlewares.reduce((a,b)=>b(a),c),this.routes.has(a)?void this.routes.get(a).set(b,c):void this.routes.set(a,new Map([[b,c]]))}handle(a,b){if(!this.routes.has(a.method))return void this.notFoundHandler(a,b);const c=[...this.routes.get(a.method).entries()].find(([b,c])=>"string"==typeof b?b===a.url:b.test(a.url));if("undefined"==typeof c)return void this.notFoundHandler(a,b);const[d,f]=c;try{d instanceof RegExp&&(a.matches=d.exec(a.url).groups),f(a,b)}catch(c){this.internalErrorHandler(a,b)}}}const cors=a=>(b,c)=>{const d=b.headers.origin;if(!d)return void a(b,c);const f={"access-control-allow-origin":"*"};if("OPTIONS"!==b.method){Object.entries(f).forEach(([a,b])=>c.setHeader(a,b));try{return void a(b,c)}catch(a){throw a.headers={...a.headers,...f},a}}b.headers["access-control-request-method"]&&(Object.entries({...f,"access-control-allow-methods":"GET, POST, PUT, DELETE, PATCH"}).forEach(([a,b])=>c.setHeader(a,b)),b.headers["access-control-request-headers"]&&c.setHeader("access-control-allow-headers",b.headers["access-control-request-headers"]),c.statusCode=204,c.end())},slow=a=>(b,c)=>{setTimeout(()=>{a(b,c)},5e3)},log=a=>(b,c)=>{console.info(`incoming request: ${b.method} ${b.url}`),a(b,c)},json=a=>(b,c)=>{const d=[];b.on("data",a=>{d.push(a)}),b.on("end",()=>{try{b.body=JSON.parse(Buffer.concat(d).toString())}catch(a){return c.statusCode=500,void c.end(JSON.stringify({error:"invalid json"}))}console.info(b.body),a(b,c)})};multipart=a=>(b,c)=>{const d=[],f="\r\n",g=f.repeat(2),h=a=>{const b={name:null,type:null,filename:null,content:null},c=a.indexOf(g);if(-1===c)throw new Error("bad multipart: no content in part");const d=a.indexOf(f,c+g.length);if(-1===d)throw new Error("bad multipart: no content in part");b.content=a.slice(c+g.length,d);let h=0;do{const c=a.indexOf(f,h),d=a.slice(h,c).toString();if(d.toLowerCase().startsWith("content-disposition")&&(b.name=/name="(?<name>[^"]*)"/.exec(d).groups.name,b.filename=/filename="(?<filename>[^"]*)"/.exec(d)?.groups?.filename),d.toLowerCase().startsWith("content-type"))switch(b.type=d.split(":")?.[1]?.trim()??"unknown",b.type){case"text/plain":b.content=b.content.toString();break;case"application/json"===b.type:b.content=JSON.parse(b.content.toString());}h=c+f.length}while(h<c);return b};b.on("data",a=>{d.push(a)}),b.on("end",()=>{try{const a=b.headers["content-type"],c=Buffer.concat(d),[,f]=a.split(";").map(a=>a.trim()).map(a=>a.replace("boundary=","")),g=`--${f}\r\n`,i=c.indexOf(g);if(-1===i)throw new Error("invalid multipart");const j=c.indexOf(`--${f}--\r\n`);if(-1===j||i>j)throw new Error("invalid multipart");b.body={};let k=i;do{const a=c.indexOf(g,k+g.length);if(-1===a){const a=c.slice(k,j),d=h(a);b.body[d.name]=d,k=j;break}const d=c.slice(k,a),f=h(d);b.body[f.name]=f,k=a}while(k<j)}catch(a){return c.statusCode=400,void c.end()}a(b,c)})},translateType=a=>a.startsWith("audio/")?"audio":a.startsWith("video/")?"video":a.startsWith("image/")?"image":"unknown";const createRouter=()=>{const a=new RegexRouter;a.use(log),a.use(cors),a.register("GET","/api/health",(a,b)=>{b.setHeader("Content-Type","application/json"),b.end(JSON.stringify([]))}),a.register("GET","/api/lection/slow/bonuses",(a,b)=>{b.setHeader("Content-Type","application/json"),b.end(JSON.stringify({bonuses:200}))},slow),a.register("GET","/api/lection/slow/error",(a,b)=>{b.setHeader("Content-Type","application/json"),b.end(JSON.stringify({status:"error"}))},slow),a.register("GET",`/api/hw15`,(a,b)=>{b.setHeader("Content-Type","application/json"),b.end(JSON.stringify({status:"ok",account:{name:"\u0422\u0435\u043A\u0443\u0449\u0438\u0439 \u0441\u0447\u0451\u0442",number:`408 17 802 0 0000000099`,amount:100.99}}))},slow);let b=0;return a.register("GET",`/api/hw16`,(a,c)=>{if(0!=++b%2)return c.statusCode=500,c.setHeader("Content-Type","application/json"),void c.end(JSON.stringify({status:"error"}));c.setHeader("Content-Type","application/json"),c.end(JSON.stringify({status:"ok",account:{name:"\u0422\u0435\u043A\u0443\u0449\u0438\u0439 \u0441\u0447\u0451\u0442",number:`408 17 802 0 0000000001`,amount:100.99}}))},slow),a},router=createRouter(),server=createServer((a,b)=>router.handle(a,b));server.listen(9999,a=>null==a?void console.info("server started at http://127.0.0.0.1:9999"):void console.error(a));
